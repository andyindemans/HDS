---
name: hds
services:
  traefik:
    profiles:
      - traefik
      - backend
      - internal
    image: docker.io/library/traefik:v3.1.2
    container_name: hds-traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:${TRAEFIK_HTTP_PORT}"
      - "--entrypoints.traefik.address=:65535"
      - "--entrypoints.http.forwardedHeaders.insecure=true"
      - "--entrypoints.https.forwardedHeaders.insecure=true"
      - "--entrypoints.http.forwardedHeaders.trustedIPs=0.0.0.0/0"
      - "--entrypoints.https.forwardedHeaders.trustedIPs=0.0.0.0/0"
      - "--entrypoints.https.address=:${TRAEFIK_HTTPS_PORT}"
      - "--certificatesresolvers.mydnschallenge.acme.httpchallenge=true"
      - "--certificatesresolvers.mydnschallenge.acme.httpchallenge.entrypoint=http"
      - "--certificatesresolvers.mydnschallenge.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.mydnschallenge.acme.storage=/acme.json"
    ports:
      - "${TRAEFIK_HTTP_PORT}:${TRAEFIK_HTTP_PORT}"
      - "${TRAEFIK_HTTPS_PORT}:${TRAEFIK_HTTPS_PORT}"
    volumes:
      - "${DOCKER_SOCK}:/var/run/docker.sock:ro"
      - "./Docker/Traefik/acme.json:/acme.json"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`hds.traefik`)"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    restart: unless-stopped

  dozzle:
    image: "amir20/dozzle:latest"
    container_name: hds-dozzle
    profiles:
      - dozzle
      - backend
      - internal
    volumes:
      - "${DOCKER_SOCK}:/var/run/docker.sock:ro"
    ports:
      - "9999:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dozzle.rule=Host(`hds.dozzle`)"
      - "traefik.http.routers.dozzle.entrypoints=http"
      - "traefik.http.services.dozzle.loadbalancer.server.port=8080"
    restart: unless-stopped

  dnsmasq:
    profiles:
      - dnsmasq
      - backend
      - internal
    image: jpillora/dnsmasq
    container_name: hds-dns
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    volumes:
      - "./Docker/DNS/dnsmasq.conf:/etc/dnsmasq.conf"
    environment:
      - DNSMASQ_USER=${DNSMASQ_USER}
    restart: always

  nextcloud:
    image: "nextcloud"
    container_name: hds-nextcloud
    profiles:
      - nextcloud
      - backend
      - internal
    ports:
      - "8098:80"
    volumes:
      - "${NEXTCLOUD_APP_DIR}:/var/www/html"
      - "${NEXTCLOUD_DATA_DIR}:/var/www/html/data"
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`hds.nextcloud`)"
      - "traefik.http.routers.nextcloud.entrypoints=http"
      - "traefik.http.routers.nextcloud-secure.rule=Host(`hds.nextcloud`)"
      - "traefik.http.routers.nextcloud-secure.entrypoints=https"
      - "traefik.http.routers.nextcloud-secure.tls.certresolver=mydnschallenge"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: "mariadb"
    container_name: hds-db
    profiles:
      - db
      - backend
      - internal
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - "db_data:/var/lib/mysql"
    restart: unless-stopped

  filebrowser:
    image: filebrowser/filebrowser:latest
    container_name: hds-files
    profiles:
      - files
      - internal
    ports:
      - "8099:80"
    volumes:
      - ${JELLYFIN_MEDIA_DIR}:/srv/Media
      - ${FILEBROWSER_ROOT}:/database
      - ${FILEBROWSER_DATA_DIR}:/srv
    environment:
      - FB_DATABASE=/database/filebrowser.db
      - FB_CONFIG=/database/filebrowser.json
      - UID=${APP_UID}
      - GID=${APP_GID}
      - FB_AUTH_USER=${FILEBROWSER_USER}
      - FB_AUTH_PASS=${FILEBROWSER_PASSWORD}
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.files.rule=Host(`hds.files`)"
      - "traefik.http.routers.files.entrypoints=http"
      - "traefik.http.services.files.loadbalancer.server.port=80"

  redis:
    image: redis:alpine
    container_name: hds-redis
    profiles:
      - redis
      - internal
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
    - "./Docker/Redis/redis.conf:/usr/local/etc/redis/redis.conf"
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redis.rule=Host(`hds.redis`)"
      - "traefik.http.routers.redis.entrypoints=http"
      - "traefik.http.services.redis.loadbalancer.server.port=6379"

volumes:
  db_data:

networks:
  default:
    name: ${COMPOSE_NETWORK}
    external: ${COMPOSE_NETWORK_EXT}
    driver: bridge
